trigger:
- master

strategy:
  matrix:
    Linux:
      imageName: "ubuntu-latest"
      generator: "Ninja"
    MacOS:
      imageName: "macos-latest"
      generator: "Ninja"
    Windows-MSVC:
      imageName: "windows-latest"
      generator: "Visual Studio 16 2019"
    Windows-MinGW:
      imageName: "windows-latest"
      generator: "MSYS Makefiles"
  maxParallel: 4

pool:
  vmImage: $(imageName)

steps:
- checkout: self
  submodules: recursive
- bash: |
    sudo apt-get -y update
    sudo apt-get -y upgrade
    sudo apt-get -y install libsdl2-dev qtbase5-dev libqt5opengl5-dev qtmultimedia5-dev qttools5-dev qttools5-dev-tools libavcodec-dev libavformat-dev libswscale-dev ninja-build
  displayName: Dependencies (Linux)
  condition: eq(variables.imageName, 'ubuntu-latest')
- bash: |
    brew update
    brew unlink python@2
    brew install sdl2 qt5 ffmpeg ninja
    pip3 install macpack
    export Qt5_DIR=$(brew --prefix)/opt/qt5
  displayName: Dependencies (MacOS)
  condition: eq(variables.imageName, 'macos-latest')
- task: CMake@1
  displayName: Configure
  inputs:
    cmakeArgs: .. -G "$(generator)" -DCMAKE_BUILD_TYPE=Release
- task: CMake@1
  displayName: Build
  inputs:
    cmakeArgs: --build . --config Release
- script: ctest
  displayName: Test
  workingDirectory: build
- task: PublishPipelineArtifact@1
  displayName: Publish
  inputs:
    targetPath: '$(Pipeline.Workspace)/build/bin'
    publishLocation: 'pipeline'
