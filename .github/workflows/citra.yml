on: [push, pull_request]
jobs:
  Citra:
    env:
      config: Release
      # Tell msys2 to add mingw64 to the path
      MSYSTEM: MINGW64
      # Tell msys2 to inherit the current directory when starting the shell
      CHERE_INVOKING: 1
    strategy:
      matrix:
        config:
          - name: Linux
            os: "ubuntu-18.04"
            generator: Ninja
            deps: |
              sudo apt-get -y update
              sudo apt-get -y install \
                cmake \
                build-essential \
                libsdl2-dev \
                qtbase5-dev \
                libqt5opengl5-dev \
                qtmultimedia5-dev \
                qttools5-dev \
                qttools5-dev-tools \
                libavcodec-dev \
                libavformat-dev \
                libswscale-dev \
                ninja-build
          - name: Linux-MinGW
            os: "ubuntu-18.04"
            generator: Ninja
            deps: |
              sudo apt-key adv --keyserver keyserver.ubuntu.com --recv '72931B477E22FEFD47F8DECE02FE5F12ADDE29B2'
              sudo add-apt-repository http://ppa.launchpad.net/tobydox/mingw-w64/ubuntu
              sudo apt-get -y update
              sudo apt-get -y install \
                cmake \
                g++-mingw-w64-x86-64 \
                gcc-mingw-w64-x86-64 \
                mingw-w64-tools \
                ninja-build \
                sdl2-mingw-w64 \
                qt5base-mingw-w64 \
                qt5tools-mingw-w64 \
                libsamplerate-mingw-w64 \
                qt5multimedia-mingw-w64
            defs: -DCMAKE_TOOLCHAIN_FILE="$(Build.SourcesDirectory)/CMakeModules/MinGWCross.cmake"
            run_tests: false

#           - name: MacOS
#             os: "macos-10.14"
#             generator: Ninja
#             deps: |
#               brew update
#               brew unlink python@2
#               brew install sdl2 qt ffmpeg ninja
#               pip3 install mac
#             defs: -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5

#           - name: Windows-MSVC
#             os: "windows-2019"
#             generator: "Visual Studio 16 2019"

#           - name: Windows-MinGW
#             os: "windows-2019"
#             generator: "MSYS Makefiles"
#             deps: |
#               git clone https://github.com/msys2/msys2-ci-base.git "${{github.workspace}}/msys2"
#               "${{github.workspace}}/msys2/usr/bin/pacman" --noconfirm -Syyuu
#               "${{github.workspace}}/msys2/usr/bin/pacman" --noconfirm -S mingw-w64-x86_64-{gcc,SDL2,qt5,cmake} make
#             cmake_shell: "\"${{github.workspace}}/msys2/usr/bin/bash\" -lc '"
#             shell_end: "'"
  
    runs-on: ${{matrix.os}}
    name: ${{matrix.name}}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: |
          mkdir build
          ${{matrix.deps}}
        name: Dependencies
      - run: ${{matrix.cmake_shell}} cmake .. -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE=${{env.config}} ${{matrix.defs}} ${{matrix.shell_end}}
        name: Configure
        working-directory: build
      - run: ${{matrix.cmake_shell}} cmake --build . --config ${{env.config}} ${{matrix.shell_end}}
        name: Build
        working-directory: build
      - run: ctest -C ${{env.config}}
        name: Test
        working-directory: build
        if: success() && matrix.run_tests
      - uses: actions/upload-artifact@v1
        name: Publish
        with:
          name: ${{matrix.name}}
          path: build/bin
